apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .JobName }}"
  # {{- if .Backend.Namespace}}
  namespace: "{{.Backend.Namespace}}"
  # {{- end }}
  labels:
    woodpecker: "true"
    woodpecker-run: "{{.Backend.ID}}"
    woodpecker-job-id: "{{.JobID}}"
spec:
  # Number of times to run is one.
  backoffLimit: 0
  template:
    metadata:
      labels:
        woodpecker: "true"
        woodpecker-run: "{{.Backend.ID}}"
        woodpecker-job-id: "{{.JobID}}"
    spec:
      restartPolicy: Never
      # {{- if ne (len .Step.Volumes) 0 }}
      volumes:
        # {{- range $mnt := .Mounts }}
        - name: "{{ $mnt.PVC.MountName }}"
          persistentVolumeClaim:
            claimName: "{{ $mnt.PVC.VolumeName }}"
        # {{- end }}
      # {{- end }}
      containers:
        - name: runner
          image: "{{ .Step.Image }}"
          # {{- if .Step.WorkingDir }}
          workingDir: "{{ .Step.WorkingDir }}"
          # {{- end }}
          imagePullPolicy: Always
          command:
            - sh
            - -c
            - |
              echo "Running: {{ .ShellCommand }}"
              sleep 3
              {{ .ShellCommand }}
          # {{- if ne (len .Step.Environment) 0 }}
          env:
            # {{- range $k, $v := .Step.Environment }}
            - name: "{{- $k -}}"
              value: "{{- $v -}}"
            # {{- end }}
          # {{- end }}
          resources: {}
          # {{- if ne (len .Step.Volumes) 0 }}
          volumeMounts:
            # {{- range $mnt := .Mounts }}
            - name: "{{ $mnt.PVC.MountName }}"
              mountPath: "{{ $mnt.MountPath }}"
            # {{- end }}
          # {{- end }}
